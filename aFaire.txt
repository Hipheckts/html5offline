
Pour lancer l'application : 
http://localhost:8080/html5offline/index.html

A lire : 
http://www.raymondcamden.com/index.cfm/2011/11/29/My-first-AngularJS-application
http://thecodersbreakfast.net/index.php?post/2012/07/30/D%C3%A9velopper-une-application-REST-avec-Spring-MVC-Angular.js
http://www.itaware.eu/2012/08/26/angularjs-navigation-et-routage/
http://jkyamog.blogspot.fr/2012/08/angularjs-for-ajax-crud.html

http://docs.angularjs.org/guide/concepts
http://docs.angularjs.org/guide
http://docs.angularjs.org/cookbook/index

chrome://appcache-internals/


A faire : 
[ok] - boostrap twitter
[ok] - mise en place angularjs
[ok] - Modernizr
[ok] - main ctrl
[ok] - fct tools
[ok] - book ctrl
[ok] - separation ctrl / services 
[ok] - la liste ne s'affiche plus ... comment ca fonctionne entre le ctrl et les routes ?
[ok] - finir les pages edit, list et create de book
[ok] - finir save en recuperant le book en cours
[ok] - finir remove en recuperant le book en cours
[ok] - confirmation / erreur avec toastr
[ok] - off line + monitoring du mode en cours + clean ?
- gestion des exceptions ?
- apk phonegap
- tests unitaires


------------------------------------------------------------------------------------------

i18n et l10n : avec des fichiers javascript en fonction de la langue : 
voir http://www.frangular.com/2012/12/traduction-des-libelles-dans-les-vues-angularjs.html
voir http://docs.angularjs.org/guide/i18n

------------------------------------------------------------------------------------------
offline

il faudrait afficher dans l'ihm le mode en cours (offline / online), si l'application cache est utilis√©

offline localstorage et online synchronisation :  
- http://www.breezejs.com/
- http://www.breezejs.com/samples/todo-angular

Comment tester le offline ?
voir Unit Testing : http://docs.angularjs.org/guide/module
voir http://docs.angularjs.org/guide/dev_guide.e2e-testing

------------------------------------------------------------------------------------------

Create a set of functions that you can reuse
	
	This is again done in the app.js file
	
	app.factory('db', function() {
	  var items = [];
	  
	  var modify = {};
	  var modify.addItem = function(item) {
	    items.push(item);
	    return 'added item';
	  };
	  var modify.getItems = function() {
	    return items;
	  }
	  return modify; // returning this is very important
	});
	
	now, in your controller, you can access these as follows
	function MainCtrl = function ($scope, db) {
	  $scope.save = function() {
	    db.addItem('hello');
	    console.log( db.getItems() );
	  };
	}
	

------------------------------------------------------------------------------------------





CACHE MANIFEST
# v 1.1

CACHE:
index.html
bootstrap-responsive.min.css
bootstrap.min.css
glyphicons-halflings-white.png
glyphicons-halflings.png
bootstrap.min.js
jquery.js
datastore.js

# modernizr.js


#ressources accessibles uniquement en ligne (pas sauvegardees)
#syntaxe : url_fichier_original url_fichier_fallback
# NETWORK:


#ressources a renvoyer dans le cas de non disponibilite des ressources demandees. 
# FALLBACK:

